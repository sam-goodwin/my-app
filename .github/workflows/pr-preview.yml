name: Preview
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: false
jobs:
  deploy-preview:
    if: ${{ github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - &a1
        name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - &a2
        name: Install dependencies
        shell: bash
        run: bun install
      - name: Deploy Preview
        run: bun run deploy --stage pr-${{ github.event.pull_request.number }}
        env:
          GITHUB_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          PULL_REQUEST: ${{ github.event.pull_request.number }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  cleanup-preview:
    if: ${{ github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - *a1
      - *a2
      - name: Cleanup Preview
        run: bun run destroy
        env:
          BRANCH_PREFIX: pr-${{ github.event.pull_request.number }}
          GITHUB_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          PULL_REQUEST: ${{ github.event.pull_request.number }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
